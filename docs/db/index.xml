<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据库 on outrun的笔记</title>
    <link>https://example.com/docs/db/</link>
    <description>Recent content in 数据库 on outrun的笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://example.com/docs/db/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Redis</title>
      <link>https://example.com/docs/db/redis/</link>
      <pubDate>Thu, 11 Oct 2018 16:09:05 +0800</pubDate>
      
      <guid>https://example.com/docs/db/redis/</guid>
      <description>特点  单线程 # emecache多线程 no-sql 内存 # 请求不经过parser和optimizer(memcache也可以，但不支持排行榜和浮点数) key-value # memcache只有字符串，append字符串, blacklist删除麻烦 # key的命令上一般用:来分隔命名空间 string 整个或一部分操作 整数、浮点数自增自减 list 两边推入或弹出 偏移量trim 读单个多个元素 值查找移除元素 set 增删查单个元素 单个元素是否存在 交集、并集、差集 随机取元素 hash 增删查单个键值对 获取所有键值对 zset # 有序集合, 排序根据score, score为双精度浮点数 增删查单个元素 根据range或成员获取元素 c 编写 复制 持久化 # memcache不能持久化 point-in-time dump # 指定时间段内有指定数量的写操作时执行 dump-to-disk二条命令 append-only文件 从不同步 每秒同步一次 一命令同步一次 客户端分片 不完全事务  应用  primary storage(主存储) secondary storage(二级存储)  命令 文件命令 redis-server # 端口为6379 redis-server /etc/redis.</description>
    </item>
    
    <item>
      <title>Mongodb</title>
      <link>https://example.com/docs/db/mongodb/</link>
      <pubDate>Thu, 11 Oct 2018 16:00:15 +0800</pubDate>
      
      <guid>https://example.com/docs/db/mongodb/</guid>
      <description>特点  数据结构json(bson) 易写入，易修改 c++编写 分布式 介于关系数据库 和 非关系数据库之间 查询语句强 支持索引 bson格式  注意  document不能大于4Mb 可以非安全模式异步马上成功 每个连接用队列存储命令  数据结构定义  collection # 表 document # 记录 field(key, value) # 字段(field)与值(value) 与关系型数据库的区别 document中的field不要key俱全或一样 find()命令查询  bson的数据类型  ＃bson 是json的扩展 # 增加了数据类型 # 把json数据转换成二进制码存到文件 null boolean undefined 数组 # 如{gps: [20, 56]} 32位和64位整数 # shell中不支持 ## node.js python java等高级语言的驱动中支持 64位浮点 # shell使用的全是这种类型, 如{x:3.14} utf-8 # 字符串类型 ObjectID Date # 如{x:new Date()} 正则 # 如{x:/uspcat/i} javascript块代码 # 如{x:function(){}} ## 相当于存储过程 内嵌文档 # 如{x: {xx: &amp;quot;a&amp;quot;}} 二进制 # shell中不能使用  ObjectId  大小 12字节 显示为24个十六进制字符 # 空间换时间的思想 细节 前4字节是unix时间戳 后3字节集群machine hash 后2字节pid 后3字节inc自增计数器, 在前面都相等时全局自增  命名  数据库与集合名 不能是空字符串 特殊字符 &#39; (空格) , $ / \ \0 应该全小写 小于64字节 数据库名不与保留库名相同，如 admin, local, config 集合名 db-text合法，但不能db.</description>
    </item>
    
    <item>
      <title>Oracle</title>
      <link>https://example.com/docs/db/oracle/</link>
      <pubDate>Thu, 11 Oct 2018 15:46:29 +0800</pubDate>
      
      <guid>https://example.com/docs/db/oracle/</guid>
      <description>启动：两个服务 OracleServiceORCL OracleOraDb11g_home1TNSListener  服务器的组成 oracle数据库 存储位置 oracle安装位置/oradata/ 每个数据库文件夹中有多个二进制文件（*.dbf） oracle实例(内存概念) 服务名 OracleService数据库名 # 实例操作数据库 # 实例包括多个进程与一个内存池(缓存)  工具 # 工具操作实例 sqlplus sqldeveloper  分布式 失败转移与负载平衡 多个服务器集成：集群 逐个连接服务器失败转移 根据每个服务器的特点分配连接进程数  Oracle认证 开发技术认证 Java认证 数据库开发语言SQL和PL/SQL认证 数据库技术认证 OCM【大师】 OCP【专家】 OCA【初级】 中间件技术认证 OracleServer认证，WEB服务器认证 专业领域技术认证 ERP CRM HR OA  版本 Oracle11g 用jdk6 8i 9i 10i # i 是internet 11g # g 是grid网格(一个请求多个服务器运行) 12c # cloud  端口 1521(lisener服务的端口号（停了以后再开会变）) netstat -a  权限 系统权限：创建数据库，创建用户 对象权限：表操作 sys create database权限 system 没有create database权限 scott hr 角色 # 超管以角色进入，普通用户输入用户名密码 dba dbaoperator  SQL99标准（不区分大小写） PLSQL是Oracle对SQl99标准的扩展 结构代查询语言 DML select,insert,update,delete DDL create table,alter table, drop table DCL grant select any table to scott, revoke select any select from scott TCL(老师编的) commit, rollback,rollback to savepoint  原理 oracle总体结构 1.</description>
    </item>
    
    <item>
      <title>Mysql</title>
      <link>https://example.com/docs/db/mysql/</link>
      <pubDate>Thu, 11 Oct 2018 15:37:48 +0800</pubDate>
      
      <guid>https://example.com/docs/db/mysql/</guid>
      <description>工具软件 mysql database mysql cluster 创建集群，配置复杂 mysql cluster manager cluster帮助软件，配置简单 mysql workbench 数据库建模工具 mysql utilities 提供一组命令行工具用于维护和管理 MySQL 服务器  端口 3306  包括 管理工具 (克隆、复制、比较、差异、导出、导入) 复制工具 (安装、配置) 一般工具 (磁盘使用情况、冗余索引、搜索元数据) mysql enterprise monitor documentation mysql enterprise monitor connector mysql enterprise monitor service manager mysql enterprise monitor agent mysql enterprise backup mysql connector  引擎 XtraDB MyISAM InnoDB  命令 mysql --max-relay-logs-size=300 # 中继日志大小(sql语句数) --relay-log-purge={0|1} # 中继日志自动清空 --relay-log-space-limit=0 # 限制中继日志大小,0表示无限制 services.msc mysql -h 127.</description>
    </item>
    
    <item>
      <title>Postgre SQL</title>
      <link>https://example.com/docs/db/postgre_sql/</link>
      <pubDate>Thu, 11 Oct 2018 15:34:29 +0800</pubDate>
      
      <guid>https://example.com/docs/db/postgre_sql/</guid>
      <description>命令 initdb --locale en_US.UTF-8 -D &#39;data&#39; postgres -D data # -p 6543 pg_ctl -D data -l a.log start postmaster # -D /data psql -d postgres # 默认创建的数据库，用户名为当前用户名 ＃ -h localhost -p 5432 -d dbname 用户名 密码 # -f 导入sql命令文件, 或者在末尾加 &amp;lt; a.sql 来导入 # -L 导出日志文件 pg_dump -f a.sql -i -C -E UTF8 -n public -h localhost # 导出数据库 # -a 导出某表 createdb # -hlocalhost -Upostgres -O 用户名 数据库名 # 创建数据库并指定 owner dropdb # -U user dbname 元命令 \?</description>
    </item>
    
  </channel>
</rss>