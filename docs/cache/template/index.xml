<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>模板配置 on outrun的笔记</title>
    <link>https://example.com/docs/cache/template/</link>
    <description>Recent content in 模板配置 on outrun的笔记</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://example.com/docs/cache/template/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://example.com/docs/cache/template/script/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/docs/cache/template/script/</guid>
      <description>默认声卡 #  pactl list short sources pactl list short sinks pactl set-default-source alsa_input.pci-0000_00_1b.0.analog-stereo pactl set-default-sink alsa_output.pci-0000_00_1b.0.analog-stereo  亮度 #  #!/usr/bin/expect -f spawn sudo vim /sys/class/backlight/intel_backlight/brightness expect &amp;quot;*password*&amp;quot; send -- &amp;quot;asdf\r&amp;quot; interact  电量 #  cat /sys/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0A:00/power_supply/BAT0/capacity  </description>
    </item>
    
    <item>
      <title>awesome</title>
      <link>https://example.com/docs/cache/template/awesome/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/docs/cache/template/awesome/</guid>
      <description>autorun.sh #  #!/usr/bin/env bash # nothing to use function run { if ! pgrep $1 ; then $@&amp;amp; fi } if randr | grep -q &#39;eDP1 connected&#39; ; then run xrandr --output VIRTUAL1 --off --output eDP1 --mode 1920x1080 --pos 0x720 --rotate normal --output DP1 --off --output DP2-1 --mode 2560x1080 --pos 3360x720 --rotate normal --output DP2-2 --off --output DP2-3 --off --output HDMI2 --off --output HDMI1 --primary --mode 2560x1440 --pos 1920x0 --rotate left --output DP2 --off fi  rc.</description>
    </item>
    
    <item>
      <title>docker模板</title>
      <link>https://example.com/docs/cache/template/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/docs/cache/template/docker/</guid>
      <description>registry #  htpasswd -Bbn outrun asdf &amp;gt; auth/htpasswd docker-compose.yml registry: restart: always image: registry:latest # privileged: true ports: - 5000:5000 environment: REGISTRY_AUTH: htpasswd REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm REGISTRY_STORAGE_DELETE_ENABLED: &amp;quot;true&amp;quot; volumes: - ./data:/var/lib/registry - ./auth:/auth docker-compose up -d 客户端 /etc/docker/daemon.json {&amp;quot;insecure-registries&amp;quot;:[&amp;quot;127.0.0.1:5000&amp;quot;]} sudo systemctl daemon-reload sudo systemctl restart docker docker login 127.0.0.1:5000 docker tag java/device:1.0 127.0.0.1:5000/java/device:1.0 docker push 127.0.0.1:5000/java/device:1.0 curl --user outrun:asdf 127.0.0.1:5000/v2/_catalog # v2表示版本 registry:2 docker pull 127.0.0.1:5000/java/device:1.0  jenkins #  docker pull jenins mkdir /var/jenkins_home docker run -d --name myjenkins -p 49001:8080 -u 0 -v /var/jenkins_home:/var/jenkins_home jenkins # -u 0 用root帐户启动  nsenter #  # 不需ssh进入容器shell docker run -v /usr/local/bin:/target jpetazzo/nsenter # 安装 docker ps # 查看要进入的容器id docker inspect --format {{.</description>
    </item>
    
    <item>
      <title>linux模板</title>
      <link>https://example.com/docs/cache/template/linux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/docs/cache/template/linux/</guid>
      <description>/etc/fstab #  /dev/nvme0n1p5 /home ext4 defaults 0 2 /dev/nvme0n1p3 /home/outrun/nvme0n1p3 ntfs-3g defaults 0 0 # /dev/nvme0n1p6 UUID=b00fac49-46d7-43ef-aea7-256d82b862b2	/ ext4 rw,relatime,data=ordered	0 1 # /dev/nvme0n1p1 LABEL=ESP UUID=FE8F-730F /boot/EFI vfat rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=iso8859-1,shortname=mixed,errors=remount-ro	0 2  /etc/resolv.conf #  nameserver 114.114.114.114  /etc/X11/xorg.conf.d/70-synaptics.conf #  Section &amp;quot;InputClass&amp;quot; Identifier &amp;quot;touchpad&amp;quot; Driver &amp;quot;synaptics&amp;quot; MatchIsTouchpad &amp;quot;on&amp;quot; Option &amp;quot;TapButton1&amp;quot; &amp;quot;1&amp;quot; Option &amp;quot;TapButton2&amp;quot; &amp;quot;3&amp;quot; Option &amp;quot;TapButton3&amp;quot; &amp;quot;2&amp;quot; Option &amp;quot;VertEdgeScroll&amp;quot; &amp;quot;on&amp;quot; Option &amp;quot;VertTwoFingerScroll&amp;quot; &amp;quot;on&amp;quot; Option &amp;quot;HorizEdgeScroll&amp;quot; &amp;quot;on&amp;quot; Option &amp;quot;HorizTwoFingerScroll&amp;quot; &amp;quot;on&amp;quot; Option &amp;quot;CircularScrolling&amp;quot; &amp;quot;on&amp;quot; Option &amp;quot;CircScrollTrigger&amp;quot; &amp;quot;2&amp;quot; Option &amp;quot;EmulateTwoFingerMinZ&amp;quot; &amp;quot;40&amp;quot; Option &amp;quot;EmulateTwoFingerMinW&amp;quot; &amp;quot;8&amp;quot; Option &amp;quot;FingerLow&amp;quot; &amp;quot;30&amp;quot; Option &amp;quot;FingerHigh&amp;quot; &amp;quot;50&amp;quot; Option &amp;quot;MaxTapTime&amp;quot; &amp;quot;125&amp;quot; Option &amp;quot;VertScrollDelta&amp;quot; &amp;quot;-50&amp;quot; Option &amp;quot;HorizScrollDelta&amp;quot; &amp;quot;-50&amp;quot; EndSection  /etc/systemd/system/docker.</description>
    </item>
    
  </channel>
</rss>
